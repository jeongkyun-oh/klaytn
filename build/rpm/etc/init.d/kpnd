#!/bin/bash
#
# kpnd         Startup script for the kpn
#
# chkconifg: - 85 15
# description : kpnd is the Klaytn proxy node daemon
#
# processname: kpnd
# config:  /etc/kpnd/conf/kpnd.conf
# pidfile: /var/run/kpnd.pid
#

# Source function library.
. /etc/init.d/functions

if [ -f /etc/kpnd/conf/kpnd.conf ]; then
        . /etc/kpnd/conf/kpnd.conf
fi

kpn=/usr/bin/kpn
prog=kpnd
lockfile=${LOCKFILE-/var/lock/subsys/kpnd}
pidfile=${PIDFILE-/var/run/kpnd.pid}
RETVAL=0
STOP_TIMEOUT=${STOP_TIMEOUT-10}

    OPTIONS="--networkid $NETWORK_ID  --datadir $DATA_DIR  --port $PORT  --rpc --rpcapi klay --rpcport $RPC_PORT  --rpcaddr 0.0.0.0 \
    --rpccorsdomain *  --rpcvhosts * --ws  --wsaddr 0.0.0.0 --wsport $WS_PORT --wsorigins * --srvtype fasthttp --metrics --prometheus \
    --verbosity 3 --txpool.globalslots 2048 --txpool.globalqueue 2048 --txpool.accountslots 2048 --txpool.accountqueue 2048 --txpool.nolocals \
    --nodiscover  --syncmode full  --mine  --maxpeers 5000 --db.leveldb.cache-size 10240"

start() {
        echo -n "Starting $prog: "
        if [ ! -d ${LOG_DIR} ]; then
                mkdir -p ${LOG_DIR}
        fi
        if [ ! -d ${RUN_DIR} ]; then
                mkdir -p ${RUN_DIR}
        fi

        __pids_var_run "$prog" "$pidfile"
        [ -n "$pid" ] && echo && return

        set -f
        $kpn $OPTIONS >> ${LOG_DIR}/kpnd.out 2>&1 &
        RETVAL=$?
        PIDNUM=$!
        set +f
        if [ $RETVAL = 0 ]; then
                echo $PIDNUM > ${pidfile}
                touch ${lockfile}
                success "$prog startup"
        else
                failure "$prog startup"
        fi
        echo
        return $RETVAL
}

stop() {
        echo -n "Shutting down $prog: "
        killproc -p ${pidfile} -d ${STOP_TIMEOUT} $kpn
        RETVAL=$?
        echo
        [ $RETVAL = 0 ] && rm -f ${lockfile} ${pidfile}
}

case "$1" in
    start)
        start
        ;;
    stop)
        stop
        ;;
    status)
        status -p ${pidfile} -l ${lockfile} $kpn
        ;;
    restart)
        stop
        start
        ;;
    *)
        echo "Usage: $prog {start|stop|restart|status}"
        exit 1
        ;;
esac
exit $?
