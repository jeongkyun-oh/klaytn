#!/bin/bash
#
# klay         Startup script for the go-klaytn
#
# chkconifg: - 85 15
# description : klay is the Klaytn blockchain node.
#
# processname: klay
# config:  /etc/klay/conf/klay.conf
# pidfile: /var/run/klay.pid
#

# Source function library.
. /etc/init.d/functions

if [ -f /etc/klay/conf/klay.conf ]; then
        . /etc/klay/conf/klay.conf
fi

klay=/usr/local/bin/klay
prog=klay
lockfile=${LOCKFILE-/var/lock/subsys/klay}
pidfile=${PIDFILE-/var/run/klay.pid}
RETVAL=0
STOP_TIMEOUT=${STOP_TIMEOUT-10}

case $NODE_TYPE in
    CN)
        OPTIONS="--nodetype cn --networkid $NETWORK_ID --datadir $DATA_DIR --port $PORT --srvtype fasthttp --metrics --prometheus --verbosity 3 \
        --txpool.globalslots 4096 --txpool.globalqueue 4096 --txpool.accountslots 4096 --txpool.accountqueue 4096 --nodiscover \
        --syncmode full --mine --maxpeers 5000 --db.leveldb.cache-size 10240"

        ;;
    BN)
        OPTIONS="--nodetype bn --networkid $NETWORK_ID  --datadir $DATA_DIR  --port $PORT  --rpc --rpcapi klay --rpcport $RPC_PORT  --rpcaddr 0.0.0.0 \
        --rpccorsdomain *  --rpcvhosts * --ws  --wsaddr 0.0.0.0 --wsport $WS_PORT --wsorigins * --srvtype fasthttp --metrics --prometheus \
        --verbosity 3 --txpool.globalslots 2048 --txpool.globalqueue 2048 --txpool.accountslots 2048 --txpool.accountqueue 2048 --txpool.nolocals \
        --nodiscover  --syncmode full  --mine  --maxpeers 5000 --db.leveldb.cache-size 10240"
        ;;
    RN)
        OPTIONS="--nodetype rn --networkid $NETWORK_ID --datadir $DATA_DIR --port $PORT --rpc --rpcapi klay --rpcport $RPC_PORT --rpcaddr 0.0.0.0 \
        --rpccorsdomain * --rpcvhosts * --ws --wsaddr 0.0.0.0 --wsport $WS_PORT --wsorigins * --srvtype fasthttp --metrics --prometheus \
        --verbosity 3 --txpool.globalslots 1024 --txpool.globalqueue 1024 --txpool.accountslots 1024 --txpool.accountqueue 1024 --nodiscover \
        --syncmode full --mine"
        ;;
    GN)
        OPTIONS="--nodetype rn --networkid $NETWORK_ID --datadir $DATA_DIR --port $PORT --rpc --rpcapi klay --rpcport $RPC_PORT --rpcaddr 0.0.0.0 \
        --rpccorsdomain * --rpcvhosts * --ws --wsaddr 0.0.0.0 --wsport $WS_PORT --wsorigins * --srvtype fasthttp --metrics --prometheus \
        --verbosity 3 --txpool.globalslots 1024 --txpool.globalqueue 1024 --txpool.accountslots 1024 --txpool.accountqueue 1024 --nodiscover \
        --syncmode full --mine"
        ;;
    *)
        OPTIONS="--nodetype rn --networkid $NETWORK_ID --datadir $DATA_DIR --port $PORT --rpc --rpcapi klay --rpcport $RPC_PORT --rpcaddr 0.0.0.0 \
        --rpccorsdomain * --rpcvhosts * --ws --wsaddr 0.0.0.0 --wsport $WS_PORT --wsorigins * --srvtype fasthttp --metrics --prometheus \
        --verbosity 3 --txpool.globalslots 1024 --txpool.globalqueue 1024 --txpool.accountslots 1024 --txpool.accountqueue 1024 --nodiscover \
        --syncmode full --mine"
        ;;
esac

start() {
        echo -n "Starting $prog ($NODE_TYPE): "
        if [ ! -d ${LOG_DIR} ]; then
                mkdir -p ${LOG_DIR}
        fi
        if [ ! -d ${RUN_DIR} ]; then
                mkdir -p ${RUN_DIR}
        fi

        __pids_var_run "$prog" "$pidfile"
        [ -n "$pid" ] && echo && return

        set -f
        $klay $OPTIONS >> ${LOG_DIR}/klay.out 2>&1 &
        RETVAL=$?
        PIDNUM=$!
        set +f
        if [ $RETVAL = 0 ]; then
                echo $PIDNUM > ${pidfile}
                touch ${lockfile}
                success "$prog startup"
        else
                failure "$prog startup"
        fi
        echo
        return $RETVAL
}

stop() {
        echo -n "Shutting down $prog ($NODE_TYPE): "
        killproc -p ${pidfile} -d ${STOP_TIMEOUT} $klay
        RETVAL=$?
        echo
        [ $RETVAL = 0 ] && rm -f ${lockfile} ${pidfile}
}

case "$1" in
    start)
        start
        ;;
    stop)
        stop
        ;;
    status)
        status -p ${pidfile} -l ${lockfile} $klay
        ;;
    restart)
        stop
        start
        ;;
    *)
        echo "Usage: $prog {start|stop|restart|status}"
        exit 1
        ;;
esac
exit $?
